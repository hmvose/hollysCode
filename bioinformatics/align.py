# -*- coding: utf-8 -*-
"""align.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kHyoWNeqnCaspHDb5TELsCMa7aZbQdnm
"""

A = "AGGCTATCACCTGACCTCCAGGCCGATGCCC"
B = "TAGCTATCACGACCGCGGTCGATTTGCCCGAC"

GAP = -2
MATCH = 7
MISMATCH = -3

N = len(A)
M = len(B)

def max(A, B, C):
  if (A>=B and A>=C):
    return A
  elif (B>=A and B>=C):
    return B
  else:
    return C

def Tmax(A, B, C):
  if (A>=B and A>=C):
    return 'D'
  elif (B>=A and B>=C):
    return 'L'
  else:
    return 'U'

def m(p, q):
  if (p==q):
    return MATCH
  else:
    return MISMATCH

RA = ""
RB = ""
RM = ""

S = [[0 for _ in range(M+1)] for _ in range(N+1)]
T = [[0 for _ in range(M+1)] for _ in range(N+1)]

for i in range(N+1):
  S[i][0]=GAP*i
  T[i][0]='U'

for j in range(M+1):
  S[0][j]=GAP*j
  T[0][j]='L'

for i in range(1,N+1):
  for j in range(1,M+1):
    S[i][j]=max(S[i-1][j-1]+m(A[i-1],B[j-1]),S[i][j-1]+GAP,S[i-1][j]+GAP)
    T[i][j]=Tmax(S[i-1][j-1]+m(A[i-1],B[j-1]),S[i][j-1]+GAP,S[i-1][j]+GAP)

print("The score of the alignment is : "+str(S[N][M]))

i=N
j=M

while i!=0 or j!=0:
  if T[i][j]=='D':
    RA = A[i-1]+RA
    RB = B[j-1]+RB
    if A[i-1]==B[j-1]:
      RM = '|'+RM
    else:
      RM = "*"+RM
    i=i-1
    j=j-1
  elif T[i][j]=='L':
    RA = '-'+RA
    RB = B[j-1]+RB
    RM = ' '+RM
    j=j-1
  elif T[i][j]=='U':
    RA = A[i-1]+RA
    RB = '-'+RB
    RM = ' '+RM
    i=i-1

print(RA)
print(RM)
print(RB)